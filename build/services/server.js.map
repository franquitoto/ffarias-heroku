{"version":3,"file":"server.js","names":["app","express","use","json","urlencoded","extended","compression","ttlSeconds","storeOptions","store","MongoStore","create","mongoUrl","Config","MONGO_ATLAS_URL","crypto","secret","resave","saveUninitialized","cookie","maxAge","session","mainRouter","publicPath","path","resolve","__dirname","set","viewsPath","passport","initialize","loginFunc","signUpFunc","myServer","http","Server"],"sources":["../../src/services/server.js"],"sourcesContent":["import express from \"express\";\r\nimport mainRouter from '../routes/index';\r\nimport http from 'http';\r\nimport path from \"path\";\r\nimport session from 'express-session';\r\nimport passport from 'passport';\r\nimport { loginFunc, signUpFunc } from './auth';\r\nimport MongoStore from \"connect-mongo\";\r\nimport Config from './config/index';\r\nimport compression from 'compression';\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(compression());\r\nconst ttlSeconds = 180;\r\nconst storeOptions = {\r\n  store: MongoStore.create({\r\n    mongoUrl: Config.MONGO_ATLAS_URL ,\r\n    crypto: {\r\n      secret: 'squirrel',\r\n    },\r\n  }),\r\n  secret: 'shhhhhhhhhhhhhhhhhhhhh',\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  cookie: {\r\n    maxAge: ttlSeconds * 1000,\r\n  },\r\n};\r\napp.use(session(storeOptions));\r\napp.use('/', mainRouter);\r\nconst publicPath = path.resolve(__dirname, '../../public');\r\napp.use(express.static(publicPath));\r\napp.set('view engine', 'ejs');\r\nconst viewsPath = path.resolve(__dirname, '../../views');\r\napp.set('views', viewsPath);\r\n//Indicamos que vamos a usar passport en todas nuestras rutas\r\napp.use(passport.initialize());\r\n\r\n//Permitimos que passport pueda manipular las sessiones de nuestra app\r\napp.use(passport.session());\r\n\r\n// Cuando un usuario se autentique correctamente, passport va a devolver en la session la info del usuario\r\npassport.use('login', loginFunc);\r\n\r\n//signUpFunc va a ser una funcion que vamos a crear y va a tener la logica de registro de nuevos usuarios\r\npassport.use('signup', signUpFunc);\r\n\r\n\r\n\r\nconst myServer = http.Server(app);\r\nexport default myServer;\r\n\r\n\r\n\r\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,IAAAC,mBAAA,GAAZ;AACAD,GAAG,CAACE,GAAJ,CAAQD,mBAAA,CAAQE,IAAR,EAAR;AACAH,GAAG,CAACE,GAAJ,CAAQD,mBAAA,CAAQG,UAAR,CAAmB;EAACC,QAAQ,EAAE;AAAX,CAAnB,CAAR;AACAL,GAAG,CAACE,GAAJ,CAAQ,IAAAI,uBAAA,GAAR;AACA,IAAMC,UAAU,GAAG,GAAnB;AACA,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,wBAAA,CAAWC,MAAX,CAAkB;IACvBC,QAAQ,EAAEC,kBAAA,CAAOC,eADM;IAEvBC,MAAM,EAAE;MACNC,MAAM,EAAE;IADF;EAFe,CAAlB,CADY;EAOnBA,MAAM,EAAE,wBAPW;EAQnBC,MAAM,EAAE,KARW;EASnBC,iBAAiB,EAAE,KATA;EAUnBC,MAAM,EAAE;IACNC,MAAM,EAAEb,UAAU,GAAG;EADf;AAVW,CAArB;AAcAP,GAAG,CAACE,GAAJ,CAAQ,IAAAmB,0BAAA,EAAQb,YAAR,CAAR;AACAR,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaoB,iBAAb;;AACA,IAAMC,UAAU,GAAGC,gBAAA,CAAKC,OAAL,CAAaC,SAAb,EAAwB,cAAxB,CAAnB;;AACA1B,GAAG,CAACE,GAAJ,CAAQD,mBAAA,WAAesB,UAAf,CAAR;AACAvB,GAAG,CAAC2B,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AACA,IAAMC,SAAS,GAAGJ,gBAAA,CAAKC,OAAL,CAAaC,SAAb,EAAwB,aAAxB,CAAlB;;AACA1B,GAAG,CAAC2B,GAAJ,CAAQ,OAAR,EAAiBC,SAAjB,E,CACA;;AACA5B,GAAG,CAACE,GAAJ,CAAQ2B,oBAAA,CAASC,UAAT,EAAR,E,CAEA;;AACA9B,GAAG,CAACE,GAAJ,CAAQ2B,oBAAA,CAASR,OAAT,EAAR,E,CAEA;;AACAQ,oBAAA,CAAS3B,GAAT,CAAa,OAAb,EAAsB6B,eAAtB,E,CAEA;;;AACAF,oBAAA,CAAS3B,GAAT,CAAa,QAAb,EAAuB8B,gBAAvB;;AAIA,IAAMC,QAAQ,GAAGC,gBAAA,CAAKC,MAAL,CAAYnC,GAAZ,CAAjB;;eACeiC,Q"}