{"version":3,"file":"user.js","names":["UserSchema","Schema","username","type","String","required","unique","password","admin","Boolean","pre","next","user","bcrypt","hash","methods","isValidPassword","compare","UserModel","model"],"sources":["../../src/models/user.js"],"sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport bcrypt from 'bcrypt';\r\n\r\nconst UserSchema = new Schema({\r\n  username: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n  admin: {type: Boolean, default: false},\r\n});\r\nUserSchema.pre('save', async function (next) {\r\n  const user = this;\r\n  const hash = await bcrypt.hash(user.password, 10);\r\n\r\n  this.password = hash;\r\n  next();\r\n});\r\n\r\nUserSchema.methods.isValidPassword = async function (password) {\r\n  const user = this;\r\n  const compare = await bcrypt.compare(password, user.password);\r\n  return compare;\r\n};\r\n\r\nexport const UserModel = model('user', UserSchema);\r\n"],"mappings":";;;;;;;;;AAAA;;AACA;;;;+CAAA,oJ;;;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;EAC5BC,QAAQ,EAAE;IAAEC,IAAI,EAAEC,MAAR;IAAgBC,QAAQ,EAAE,IAA1B;IAAgCC,MAAM,EAAE;EAAxC,CADkB;EAE5BC,QAAQ,EAAE;IAAEJ,IAAI,EAAEC,MAAR;IAAgBC,QAAQ,EAAE;EAA1B,CAFkB;EAG5BG,KAAK,EAAE;IAACL,IAAI,EAAEM,OAAP;IAAgB,WAAS;EAAzB;AAHqB,CAAX,CAAnB;AAKAT,UAAU,CAACU,GAAX,CAAe,MAAf;EAAA,sEAAuB,iBAAgBC,IAAhB;IAAA;IAAA;MAAA;QAAA;UAAA;YACfC,IADe,GACR,IADQ;YAAA;YAAA,OAEFC,kBAAA,CAAOC,IAAP,CAAYF,IAAI,CAACL,QAAjB,EAA2B,EAA3B,CAFE;;UAAA;YAEfO,IAFe;YAIrB,KAAKP,QAAL,GAAgBO,IAAhB;YACAH,IAAI;;UALiB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAvB;;EAAA;IAAA;EAAA;AAAA;;AAQAX,UAAU,CAACe,OAAX,CAAmBC,eAAnB;EAAA,uEAAqC,kBAAgBT,QAAhB;IAAA;IAAA;MAAA;QAAA;UAAA;YAC7BK,IAD6B,GACtB,IADsB;YAAA;YAAA,OAEbC,kBAAA,CAAOI,OAAP,CAAeV,QAAf,EAAyBK,IAAI,CAACL,QAA9B,CAFa;;UAAA;YAE7BU,OAF6B;YAAA,kCAG5BA,OAH4B;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArC;;EAAA;IAAA;EAAA;AAAA;;AAMO,IAAMC,SAAS,GAAG,IAAAC,eAAA,EAAM,MAAN,EAAcnB,UAAd,CAAlB"}