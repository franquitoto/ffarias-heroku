{"version":3,"file":"index.js","names":["numCPUs","os","cpus","length","args","minimist","process","argv","puerto","port","init","n","initMongoDB","myServer","listen","logger","info","modoCluster","modo","console","log","cluster","isPrimary","pid","i","fork","on","worker","code","warn","Date","webSocket"],"sources":["../src/index.js"],"sourcesContent":["import myServer from \"./services/server\";\r\nimport { initMongoDB } from './services/databases';\r\nimport { webSocket } from \"./services/socket\";\r\nimport minimist from 'minimist';\r\nimport cluster from \"cluster\";\r\nimport os from 'os';\r\nimport { logger } from \"./services/logger\";\r\n\r\n// const optionalArgsObject = {\r\n//   alias: {\r\n//     p: 'puerto'\r\n//   },\r\n//   default: {\r\n//     //Si no nos envian el argumento, se setea por default\r\n//     p: '8080',\r\n//   },\r\n// };\r\n//\r\n\r\nconst numCPUs = os.cpus().length\r\nconst args = minimist(process.argv);\r\nconst puerto = args.port || 8080;\r\n\r\nconst init = async (n) => {\r\n  \r\n  await initMongoDB();\r\n  myServer.listen(puerto, () => logger.info(`server up on port ${puerto} PID WORKER ${n}`));\r\n}\r\nconst modoCluster = args.modo\r\n\r\n\r\n\r\n\r\nlogger.info(args);\r\nif(modoCluster === \"cluster\"){\r\n  console.log(\"modo cluster\")\r\n  if (cluster.isPrimary) {\r\n    console.log(`NUMERO DE CPUS ===> ${numCPUs}`);\r\n    console.log(`PID MASTER ${process.pid}`);\r\n  \r\n    for (let i = 0; i <= numCPUs; i++) {\r\n      cluster.fork();\r\n    }\r\n  \r\n    cluster.on('exit', (worker, code) => {\r\n      logger.warn(`Worker ${worker.process.pid} died with code ${code} at ${Date()}`);\r\n      cluster.fork();\r\n    });\r\n  } else {\r\n    /* --------------------------------------------------------------------------- */\r\n    /* WORKERS */\r\n    init(process.pid);\r\n    webSocket()\r\n  }\r\n}else{\r\n    init(process.pid);\r\n    webSocket()\r\n    logger.info(\"modo fork\")\r\n}\r\n \r\n"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;+CALA,oJ;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,OAAO,GAAGC,cAAA,CAAGC,IAAH,GAAUC,MAA1B;;AACA,IAAMC,IAAI,GAAG,IAAAC,oBAAA,EAASC,OAAO,CAACC,IAAjB,CAAb;AACA,IAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,IAAa,IAA5B;;AAEA,IAAMC,IAAI;EAAA,sEAAG,iBAAOC,CAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAEL,IAAAC,sBAAA,GAFK;;UAAA;YAGXC,kBAAA,CAASC,MAAT,CAAgBN,MAAhB,EAAwB;cAAA,OAAMO,cAAA,CAAOC,IAAP,6BAAiCR,MAAjC,yBAAsDG,CAAtD,EAAN;YAAA,CAAxB;;UAHW;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAJD,IAAI;IAAA;EAAA;AAAA,GAAV;;AAKA,IAAMO,WAAW,GAAGb,IAAI,CAACc,IAAzB;;AAKAH,cAAA,CAAOC,IAAP,CAAYZ,IAAZ;;AACA,IAAGa,WAAW,KAAK,SAAnB,EAA6B;EAC3BE,OAAO,CAACC,GAAR,CAAY,cAAZ;;EACA,IAAIC,mBAAA,CAAQC,SAAZ,EAAuB;IACrBH,OAAO,CAACC,GAAR,+BAAmCpB,OAAnC;IACAmB,OAAO,CAACC,GAAR,sBAA0Bd,OAAO,CAACiB,GAAlC;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIxB,OAArB,EAA8BwB,CAAC,EAA/B,EAAmC;MACjCH,mBAAA,CAAQI,IAAR;IACD;;IAEDJ,mBAAA,CAAQK,EAAR,CAAW,MAAX,EAAmB,UAACC,MAAD,EAASC,IAAT,EAAkB;MACnCb,cAAA,CAAOc,IAAP,kBAAsBF,MAAM,CAACrB,OAAP,CAAeiB,GAArC,6BAA2DK,IAA3D,iBAAsEE,IAAI,EAA1E;;MACAT,mBAAA,CAAQI,IAAR;IACD,CAHD;EAID,CAZD,MAYO;IACL;;IACA;IACAf,IAAI,CAACJ,OAAO,CAACiB,GAAT,CAAJ;IACA,IAAAQ,iBAAA;EACD;AACF,CApBD,MAoBK;EACDrB,IAAI,CAACJ,OAAO,CAACiB,GAAT,CAAJ;EACA,IAAAQ,iBAAA;;EACAhB,cAAA,CAAOC,IAAP,CAAY,WAAZ;AACH"}